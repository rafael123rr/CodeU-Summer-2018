<?xml version="1.0" encoding="UTF-8"?>
<project name="bbprocessor" default="all">
    <property file="bbprocessor.properties"/>

    <!-- Compiler options -->
    <property name="compiler.debug" value="on"/>
    <property name="compiler.generate.no.warnings" value="off"/>
    <property name="compiler.args" value="-encoding utf-8 -source 1.6 -target 1.6"/>
    <property name="compiler.args.jdk15" value="-encoding utf-8 -source 1.5 -target 1.5"/>
    <property name="compiler.max.memory" value="128m"/>
    <patternset id="ignored.files">
        <exclude name="**/CVS/**"/>
        <exclude name="**/SCCS/**"/>
        <exclude name="**/RCS/**"/>
        <exclude name="**/rcs/**"/>
        <exclude name="**/.DS_Store/**"/>
        <exclude name="**/.svn/**"/>
        <exclude name="**/.pyc/**"/>
        <exclude name="**/.pyo/**"/>
        <exclude name="**/*.pyc/**"/>
        <exclude name="**/*.pyo/**"/>
        <exclude name="**/.git/**"/>
        <exclude name="**/.sbas/**"/>
        <exclude name="**/.IJI.*/**"/>
        <exclude name="**/vssver.scc/**"/>
        <exclude name="**/vssver2.scc/**"/>
    </patternset>
    <patternset id="compiler.resources">
        <include name="**/?*.properties"/>
        <include name="**/?*.xml"/>
    </patternset>

    <!-- Module BBProcessor -->
    <dirname property="basedir" file="${ant.file}"/>

    <property name="output.dir" value="${basedir}/out/production/classes"/>
    <property name="testoutput.dir" value="${basedir}/out/test/classes"/>

    <!-- Output dirs for JDK 1.5 -->
    <property name="output.dir.jdk15" value="${basedir}/out/jdk15/production/classes"/>
    <property name="testoutput.dir.jdk15" value="${basedir}/out/jdk15/test/classes"/>

    <path id="runtime.classpath">
        <pathelement location="${output.dir}"/>
        <pathelement location="${testoutput.dir}"/>
    </path>

    <!-- Runtime classpath for JDK 1.5 -->
    <path id="runtime.classpath">
        <pathelement location="${output.dir.jdk15}"/>
        <pathelement location="${testoutput.dir.jdk15}"/>
    </path>

    <path id="sourcepath">
        <dirset dir="${basedir}">
            <include name="src"/>
        </dirset>
    </path>

    <path id="test.sourcepath">
        <dirset dir="${basedir}">
            <include name="test"/>
        </dirset>
    </path>


    <target name="compile"
            depends="compile.production,compile.tests"
            description="Compile module BBProcessor"/>

    <target name="compile.production" description="Compile module BBProcessor; production classes">
        <mkdir dir="${output.dir}"/>
        <mkdir dir="${output.dir.jdk15}"/>
        <javac
                executable="${jdk.home}/bin/javac"
                destdir="${output.dir}"
                debug="${compiler.debug}"
                nowarn="${compiler.generate.no.warnings}"
                memorymaximumsize="${compiler.max.memory}"
                fork="true">
            <compilerarg line="${compiler.args}"/>
            <src refid="sourcepath"/>
            <patternset refid="ignored.files"/>
        </javac>
        <javac
                executable="${jdk15.home}/bin/javac"
                destdir="${output.dir.jdk15}"
                debug="${compiler.debug}"
                nowarn="${compiler.generate.no.warnings}"
                memorymaximumsize="${compiler.max.memory}"
                fork="true">
            <compilerarg line="${compiler.args.jdk15}"/>
            <src refid="sourcepath"/>
            <patternset refid="ignored.files"/>
        </javac>

        <copy todir="${output.dir}">
            <fileset dir="${basedir}/src">
                <patternset refid="compiler.resources"/>
                <type type="file"/>
            </fileset>
        </copy>
        <copy todir="${output.dir.jdk15}">
            <fileset dir="${basedir}/src">
                <patternset refid="compiler.resources"/>
                <type type="file"/>
            </fileset>
        </copy>
    </target>

    <target name="compile.tests" depends="compile.production"
            description="compile module BBProcessor; test classes" unless="skip.tests">
        <mkdir dir="${testoutput.dir}"/>
        <mkdir dir="${testoutput.dir.jdk15}"/>

        <javac
                executable="${jdk.home}/bin/javac"
                destdir="${testoutput.dir}"
                debug="${compiler.debug}"
                nowarn="${compiler.generate.no.warnings}"
                memorymaximumsize="${compiler.max.memory}"
                fork="true">
            <compilerarg line="${compiler.args}"/>
            <classpath>
                <pathelement location="${output.dir}"/>
                <pathelement location="${junit.classpath}"/>
            </classpath>
            <src refid="test.sourcepath"/>
            <patternset refid="ignored.files"/>
        </javac>
        <javac
                executable="${jdk15.home}/bin/javac"
                destdir="${testoutput.dir.jdk15}"
                debug="${compiler.debug}"
                nowarn="${compiler.generate.no.warnings}"
                memorymaximumsize="${compiler.max.memory}"
                fork="true">
            <compilerarg line="${compiler.args.jdk15}"/>
            <classpath>
                <pathelement location="${output.dir.jdk15}"/>
                <pathelement location="${junit.classpath}"/>
            </classpath>
            <src refid="test.sourcepath"/>
            <patternset refid="ignored.files"/>
        </javac>

        <copy todir="${testoutput.dir}">
            <fileset dir="${basedir}/test">
                <patternset refid="compiler.resources"/>
                <type type="file"/>
            </fileset>
        </copy>
        <copy todir="${testoutput.dir.jdk15}">
            <fileset dir="${basedir}/test">
                <patternset refid="compiler.resources"/>
                <type type="file"/>
            </fileset>
        </copy>
    </target>

    <!-- Clean output directories -->
    <target name="clean" description="cleanup all">
        <delete dir="${output.dir}"/>
        <delete dir="${testoutput.dir}"/>
        <delete dir="${output.dir.jdk15}"/>
        <delete dir="${testoutput.dir.jdk15}"/>
    </target>

    <!-- Start tests -->
    <target name="start.tests" depends="compile.tests"
            description="Start all tests" unless="skip.tests">
        <junit
                printsummary="yes"
                fork="true"
                haltonerror="true"
                jvm="${jdk.home}/jre/bin/java"
                dir="${basedir}">
            <assertions>
                <enable/>
            </assertions>
            <classpath>
                <pathelement location="${testoutput.dir}"/>
                <pathelement location="${output.dir}"/>
                <pathelement location="${junit.classpath}"/>
            </classpath>

            <!-- Black box -->
            <test name="ru.perm.kefir.bbcode.blackbox.BBProcessorTest"/>
            <test name="ru.perm.kefir.bbcode.blackbox.CreateTest"/>
            <test name="ru.perm.kefir.bbcode.blackbox.ScopeTest"/>
            <test name="ru.perm.kefir.bbcode.blackbox.EscapeXmlProcessorTest"/>
            <test name="ru.perm.kefir.bbcode.blackbox.DefaultConfigurationTest"/>
            <test name="ru.perm.kefir.bbcode.blackbox.RollbackTest"/>
            <test name="ru.perm.kefir.bbcode.blackbox.ProgrammaticConfigurationTest"/>

            <!-- Module tests -->
            <test name="ru.perm.kefir.bbcode.SourceTest"/>
            <test name="ru.perm.kefir.bbcode.ContextTest"/>
            <test name="ru.perm.kefir.bbcode.IntSetTest"/>
            <test name="ru.perm.kefir.bbcode.TextProcessorChainTest"/>
        </junit>
    </target>

    <!-- Start tests for JDK 1.5 -->
    <target name="start.tests.jdk15" depends="compile.tests"
            description="Start all tests" unless="skip.tests">
        <junit
                printsummary="yes"
                fork="true"
                haltonerror="true"
                jvm="${jdk15.home}/jre/bin/java"
                dir="${basedir}">
            <assertions>
                <enable/>
            </assertions>
            <classpath>
                <pathelement location="${testoutput.dir.jdk15}"/>
                <pathelement location="${output.dir.jdk15}"/>
                <pathelement location="${junit.classpath}"/>
            </classpath>

            <!-- Black box -->
            <test name="ru.perm.kefir.bbcode.blackbox.BBProcessorTest"/>
            <test name="ru.perm.kefir.bbcode.blackbox.CreateTest"/>
            <test name="ru.perm.kefir.bbcode.blackbox.ScopeTest"/>
            <test name="ru.perm.kefir.bbcode.blackbox.EscapeXmlProcessorTest"/>
            <test name="ru.perm.kefir.bbcode.blackbox.DefaultConfigurationTest"/>
            <test name="ru.perm.kefir.bbcode.blackbox.RollbackTest"/>
            <test name="ru.perm.kefir.bbcode.blackbox.ProgrammaticConfigurationTest"/>

            <!-- Module tests -->
            <test name="ru.perm.kefir.bbcode.SourceTest"/>
            <test name="ru.perm.kefir.bbcode.ContextTest"/>
            <test name="ru.perm.kefir.bbcode.IntSetTest"/>
            <test name="ru.perm.kefir.bbcode.TextProcessorChainTest"/>
        </junit>
    </target>

    <!-- Generate jar file -->
    <target name="generate.jar">
        <delete file="${basedir}/kefir-bb-${kefirbb.version}.jar"/>
        <delete file="${basedir}/kefir-bb-jdk15-${kefirbb.version}.jar"/>

        <jar
                destfile="${basedir}/kefir-bb-${kefirbb.version}.jar"
                basedir="${output.dir}"
                />
        <jar
                destfile="${basedir}/kefir-bb-jdk15-${kefirbb.version}.jar"
                basedir="${output.dir.jdk15}"
                />
    </target>

    <!-- Start all targets -->
    <target name="all" depends="clean,compile,start.tests,start.tests.jdk15,generate.jar" description="build all"/>

    <!-- Javadocs -->
    <property name="javadoc.dir" value="${basedir}/doc"/>
    <target name="generate.javadocs">
        <delete dir="${javadoc.dir}"/>
        <javadoc
                sourcepath="${basedir}/src"
                destdir="${javadoc.dir}"
                classpath="ru.perm.kefir.bbcode"
                access="protected"
                encoding="utf-8"
                author="true"
                splitindex="true"
                charset="utf-8"
                />
    </target>

    <!-- Compile release -->
    <property name="release.dir" value="${basedir}/releases/kefir-bb-${kefirbb.version}"/>
    <target name="release" depends="all,generate.javadocs">
        <delete dir="${release.dir}"/>
        <delete file="${release.dir}.zip"/>
        <delete file="${release.dir}.jar"/>
        <mkdir dir="${release.dir}"/>
        <copydir src="${javadoc.dir}" dest="${release.dir}/doc" excludes="**/CVS/**"/>
        <copydir src="${basedir}/src" dest="${release.dir}/src" excludes="**/CVS/**"/>
        <copydir src="${basedir}/test" dest="${release.dir}/test" excludes="**/CVS/**"/>
        <copydir src="${basedir}/reference" dest="${release.dir}/reference" excludes="**/CVS/**"/>
        <copyfile src="${basedir}/kefir-bb-${kefirbb.version}.jar" dest="${release.dir}/kefir-bb-${kefirbb.version}.jar"/>
        <copyfile src="${basedir}/kefir-bb-${kefirbb.version}.jar" dest="${release.dir}.jar"/>
        <copyfile src="${basedir}/kefir-bb-jdk15-${kefirbb.version}.jar" dest="${release.dir}/kefir-bb-jdk15-${kefirbb.version}.jar"/>
        <copyfile src="${basedir}/xml/${kefirbb.schema}" dest="${release.dir}/${kefirbb.schema}"/>
        <copydir src="${basedir}/resource" dest="${release.dir}/resource" excludes="**/CVS/**"/>
        <copyfile src="${basedir}/bbprocessor.xml" dest="${release.dir}/bbprocessor.xml"/>
        <copyfile src="${basedir}/bbprocessor.properties" dest="${release.dir}/bbprocessor.properties"/>
        <zip destfile="${release.dir}.zip" encoding="utf-8">
            <zipfileset dir="${release.dir}" prefix="kefir-bb-${kefirbb.version}"/>
        </zip>
    </target>
</project>